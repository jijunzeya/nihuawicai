{"version":3,"sources":["../../src/handler/Roomhandler.js"],"names":["RoomHandler","id","nsp","socket","handleGameData","handleGameEvent","roomId","_namespace","_socket","initSocket","console","log","handshake","query","token","name","on","receiveMessage","bind","onUserChatMessage","GET_ROOMS","onGetRooms","onGetPointData","onGameEvent","onConnect","sockect","rooms","data","fn","_rooms","message","point","JSON","stringify","event","action","to","emit","nick","socketId","broadcast","room","_sockect"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;IACqBA,W;;AAQnB;;AAEA;;AAOA,uBAAYC,EAAZ,EAAgBC,GAAhB,EAAqBC,MAArB,EAA6BC,cAA7B,EAA6CC,eAA7C,EAA8D;AAAA;;AAC5D,SAAKC,MAAL,GAAcL,EAAd;AACA,SAAKM,UAAL,GAAkBL,GAAlB;AACA;AACA,SAAKM,OAAL,GAAeL,MAAf;AACA;AACA;AACA,SAAKE,eAAL,GAAuBA,eAAvB;AACA,SAAKD,cAAL,GAAsBA,cAAtB;;AAEA,SAAKK,UAAL,CAAgB,KAAKD,OAArB;AAED;;AAfD;;;AAVA;;;;gCA2BaP,E,EAAIE,M,EAAQ;AACvB,WAAKG,MAAL,GAAcL,EAAd;AACA,WAAKO,OAAL,GAAeL,MAAf;AACA,WAAKM,UAAL,CAAgBN,MAAhB;AACD;;;+BAEWA,M,EAAQ;AAClBO,cAAQC,GAAR,CAAY,uBAAuBR,OAAOS,SAAP,CAAiBC,KAAjB,CAAuBC,KAA9C,GAAsD,GAAtD,GAA4DX,OAAOS,SAAP,CAAiBC,KAAjB,CAAuBE,IAA/F;AACA;AACA,WAAKP,OAAL,CAAaQ,EAAb,CAAgB,SAAhB,EAA2B,KAAKC,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAA3B;AACA;AACAf,aAAOa,EAAP,CAAU,UAAV,EAAsB,KAAKG,iBAAL,CAAuBD,IAAvB,CAA4B,IAA5B,CAAtB;;AAEA;AACA;AACAf,aAAOa,EAAP,CAAU,oBAAUI,SAApB,EAA+B,KAAKC,UAAL,CAAgBH,IAAhB,CAAqB,IAArB,CAA/B;;AAEAf,aAAOa,EAAP,CAAU,WAAV,EAAuB,KAAKM,cAAL,CAAoBJ,IAApB,CAAyB,IAAzB,CAAvB;AACAf,aAAOa,EAAP,CAAU,WAAV,EAAuB,KAAKO,WAAL,CAAiBL,IAAjB,CAAsB,IAAtB,CAAvB;;AAEAf,aAAOa,EAAP,CAAU,YAAV,EAAwB,KAAKQ,SAAL,CAAeN,IAAf,CAAoB,IAApB,CAAxB;AACD;;AAED;;;;8BAEWO,O,EAAS;AAClBf,cAAQC,GAAR,CAAY,2BAA2B,KAAKe,KAAL,CAAW,CAAX,CAA3B,CAAZ;AACD;;;+BAEWC,I,EAAMC,E,EAAI;AACpBA,YAAMA,GAAG,KAAKC,MAAR,CAAN;AACD;;;mCAEeC,O,EAAS;AACvBpB,cAAQC,GAAR,CAAY,0BAA0BmB,OAAtC;AACA;AACD;;AAED;;;;mCACgBC,K,EAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACArB,cAAQC,GAAR,CAAY,wBAAwB,KAAKH,OAAL,CAAaP,EAArC,GAA0C,GAA1C,GAAgD+B,KAAKC,SAAL,CAAeF,KAAf,CAA5D;AACA,WAAK3B,cAAL,CAAoB2B,KAApB;AAED;;;gCAEYG,K,EAAO;AAClB,UAAIA,SAASA,MAAMC,MAAnB,EAA2B;AACzB;AACA,aAAK9B,eAAL,IAAwB,KAAKA,eAAL,CAAqB0B,KAArB,CAAxB;AACD;AACF;;;sCAEkBD,O,EAAS;AAC1BpB,cAAQC,GAAR,CAAY,uBAAuBmB,OAAnC;AACA,WAAKvB,UAAL,CAAgB6B,EAAhB,CAAmB,KAAK9B,MAAxB,EAAgC+B,IAAhC,CAAqC,oBAArC,EAA2D;AACzDC,cAAM,KAAK9B,OAAL,CAAaP,EADsC;AAEzD6B,iBAASA;AAFgD,OAA3D;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;;gCAEYS,Q,EAAUL,K,EAAOJ,O,EAAS;AACrC;AACAtB,cAAQgC,SAAR,CAAkBJ,EAAlB,CAAqBG,QAArB,EAA+BF,IAA/B,CAAoCH,KAApC,EAA2CJ,OAA3C;AACD;;;sCAEkBW,I,EAAMP,K,EAAOJ,O,EAAS;AACvC;AACA,WAAKvB,UAAL,CAAgB6B,EAAhB,CAAmBK,IAAnB,EAAyBJ,IAAzB,CAA8BH,KAA9B,EAAqCJ,OAArC;AACD;;;mCAEe;AACdpB,cAAQC,GAAR,CAAY,UAAU,KAAK+B,QAAL,CAAczC,EAAxB,GAA6B,cAAzC;AACD;;;;;;kBA1HkBD,W","file":"Roomhandler.js","sourcesContent":["import User from '../beans/User';\nimport Room from '../beans/Room';\nimport Constants from '../common/Constants';\nimport Game from '../game/Game';\nexport default class RoomHandler {\n\n  _socket;\n\n  // _user;\n\n  _namespace;\n\n  // createRoomCallback;\n\n  // joinedRoomCallback;\n\n  handleGameEvent;\n\n  // _rooms;\n  roomId;\n\n  constructor(id, nsp, socket, handleGameData, handleGameEvent) {\n    this.roomId = id;\n    this._namespace = nsp;\n    // this._rooms = rooms;\n    this._socket = socket;\n    // this.createRoomCallback = cCallback;\n    // this.joinedRoomCallback = jCallback;\n    this.handleGameEvent = handleGameEvent;\n    this.handleGameData = handleGameData;\n\n    this.initSocket(this._socket);\n\n  }\n\n  resetSocket (id, socket) {\n    this.roomId = id;\n    this._socket = socket;\n    this.initSocket(socket);\n  }\n\n  initSocket (socket) {\n    console.log('@@##initSocket @@:' + socket.handshake.query.token + ' ' + socket.handshake.query.name)\n    // this._user = new User(socket.id, socket.handshake.query.name);\n    this._socket.on('message', this.receiveMessage.bind(this));\n    // socket.on('disconnect', this.onDisConnect.bind(this));\n    socket.on('userChat', this.onUserChatMessage.bind(this));\n\n    // socket.on('createRoom', this.onCreateRoom.bind(this));\n    // socket.on('joinRoom', this.onJoinRoom.bind(this));\n    socket.on(Constants.GET_ROOMS, this.onGetRooms.bind(this));\n\n    socket.on('pointData', this.onGetPointData.bind(this));\n    socket.on('gameEvent', this.onGameEvent.bind(this));\n\n    socket.on('connection', this.onConnect.bind(this));\n  }\n\n  // handleGame(game)\n\n  onConnect (sockect) {\n    console.log('@@##onConnect:' + (typeof this.rooms[0]));\n  }\n\n  onGetRooms (data, fn) {\n    fn && fn(this._rooms);\n  }\n\n  receiveMessage (message) {\n    console.log('chat receive message:' + message);\n    // 然后呢 =\n  }\n\n  // 接收游戏数据\n  onGetPointData (point) {\n    // if (!this.game) {\n    //   this.game = new Game((event) => {\n    //     // this._namespace.to(this._user.roomId).emit('gamePointData', p);\n    //     this.sendMessageToRoom(this.roomId, event.name, event.data);\n    //   });\n    // }\n    // this.game.handleData(point);\n    console.log('@@##onGetPointData:' + this._socket.id + ' ' + JSON.stringify(point));\n    this.handleGameData(point);\n\n  }\n\n  onGameEvent (event) {\n    if (event && event.action) {\n      // this.game && this.game.handleGameEvent(event);\n      this.handleGameEvent && this.handleGameEvent(point);\n    }\n  }\n\n  onUserChatMessage (message) {\n    console.log('onUserChatMessage:' + message);\n    this._namespace.to(this.roomId).emit('serverSendUserChat', {\n      nick: this._socket.id,\n      message: message\n    });\n\n\n    // let curRoom = this._rooms[this._user.roomId];\n    // if (curRoom) {\n    //     let users = curRoom.users;\n    //     for (let user of users) {\n    //         this._namespace.to(user.id).emit('serverSendUserChat', {\n    //             nick: user.nickName,\n    //             message: message + 'from' + user.nickName\n    //         });\n    //     }\n    // }\n  }\n\n  sendMessage (socketId, event, message) {\n    //发消息到房间还是给人\n    _socket.broadcast.to(socketId).emit(event, message);\n  }\n\n  sendMessageToRoom (room, event, message) {\n    //发消息到房间还是给人呢\n    this._namespace.to(room).emit(event, message);\n  }\n\n  onDisConnect () {\n    console.log('User ' + this._sockect.id + ' disconneted');\n  }\n\n}"]}