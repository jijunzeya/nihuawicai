{"version":3,"sources":["../../src/handler/Roomhandler.js"],"names":["RoomHandler","id","nsp","socket","cCallback","jCallback","roomId","_namespace","_socket","createRoomCallback","joinedRoomCallback","initSocket","console","log","handshake","query","token","name","on","receiveMessage","bind","onUserChatMessage","GET_ROOMS","onGetRooms","onGetPointData","onGameEvent","onConnect","sockect","rooms","data","fn","_rooms","message","point","game","event","sendMessageToRoom","handleData","action","handleGameEvent","to","emit","nick","socketId","broadcast","room","_sockect"],"mappings":"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","file":"Roomhandler.js","sourcesContent":["import User from '../beans/User';\nimport Room from '../beans/Room';\nimport Constants from '../common/Constants';\nimport Game from '../game/Game';\nexport default class RoomHandler {\n\n  _socket;\n\n  // _user;\n\n  _namespace;\n\n  createRoomCallback;\n\n  joinedRoomCallback;\n\n  // _rooms;\n  roomId;\n\n  constructor(id, nsp, socket, cCallback, jCallback) {\n    this.roomId = id;\n    this._namespace = nsp;\n    // this._rooms = rooms;\n    this._socket = socket;\n    this.createRoomCallback = cCallback;\n    this.joinedRoomCallback = jCallback;\n\n    this.initSocket(this._socket);\n  }\n\n  initSocket (socket) {\n    console.log('@@##initSocket @@:' + socket.handshake.query.token + ' ' + socket.handshake.query.name)\n    // this._user = new User(socket.id, socket.handshake.query.name);\n    this._socket.on('message', this.receiveMessage.bind(this));\n    // socket.on('disconnect', this.onDisConnect.bind(this));\n    socket.on('userChat', this.onUserChatMessage.bind(this));\n\n    // socket.on('createRoom', this.onCreateRoom.bind(this));\n    // socket.on('joinRoom', this.onJoinRoom.bind(this));\n    socket.on(Constants.GET_ROOMS, this.onGetRooms.bind(this));\n\n    socket.on('pointData', this.onGetPointData.bind(this));\n    socket.on('gameEvent', this.onGameEvent.bind(this));\n\n    socket.on('connection', this.onConnect.bind(this));\n  }\n\n  onConnect (sockect) {\n    console.log('@@##onConnect:' + (typeof this.rooms[0]));\n  }\n\n  onGetRooms (data, fn) {\n    fn && fn(this._rooms);\n  }\n\n  receiveMessage (message) {\n    console.log('chat receive message:' + message);\n    // 然后呢 =\n  }\n\n\n\n  // 接收游戏数据\n  onGetPointData (point) {\n    if (!this.game) {\n      this.game = new Game((event) => {\n        // this._namespace.to(this._user.roomId).emit('gamePointData', p);\n        this.sendMessageToRoom(this.roomId, event.name, event.data);\n      });\n    }\n    this.game.handleData(point);\n\n  }\n\n  onGameEvent (event) {\n    if (event && event.action) {\n      this.game && this.game.handleGameEvent(event);\n    }\n  }\n\n  onUserChatMessage (message) {\n    console.log('onUserChatMessage:' + message);\n    this._namespace.to(this.roomId).emit('serverSendUserChat', {\n      nick: this._socket.id,\n      message: message\n    });\n\n\n    // let curRoom = this._rooms[this._user.roomId];\n    // if (curRoom) {\n    //     let users = curRoom.users;\n    //     for (let user of users) {\n    //         this._namespace.to(user.id).emit('serverSendUserChat', {\n    //             nick: user.nickName,\n    //             message: message + 'from' + user.nickName\n    //         });\n    //     }\n    // }\n  }\n\n  sendMessage (socketId, event, message) {\n    //发消息到房间还是给人\n    _socket.broadcast.to(socketId).emit(event, message);\n  }\n\n  sendMessageToRoom (room, event, message) {\n    //发消息到房间还是给人呢\n    this._namespace.to(room).emit(event, message);\n  }\n\n  onDisConnect () {\n    console.log('User ' + this._sockect.id + ' disconneted');\n  }\n\n}"]}