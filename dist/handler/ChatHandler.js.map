{"version":3,"sources":["../../src/handler/ChatHandler.js"],"names":["ChatHandler","nsp","rooms","socket","cCallback","jCallback","_namespace","_rooms","_socket","createRoomCallback","joinedRoomCallback","initSocket","console","log","handshake","query","token","name","_user","id","on","receiveMessage","bind","onUserChatMessage","onCreateRoom","onJoinRoom","GET_ROOMS","onGetRooms","onGetPointData","onGameEvent","onConnect","sockect","data","fn","roomId","JSON","stringify","join","room","nickName","game","event","sendMessageToRoom","err","emit","code","curRoom","result","users","length","leave","to","nick","message","point","handleData","action","handleGameEvent","socketId","broadcast"],"mappings":"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","file":"ChatHandler.js","sourcesContent":["import User from '../beans/User';\nimport Room from '../beans/Room';\nimport Constants from '../common/Constants';\nimport Game from '../game/Game';\nexport default class ChatHandler {\n\n  _socket;\n\n  _user;\n\n  _namespace;\n\n  createRoomCallback;\n\n  joinedRoomCallback;\n\n  _rooms;\n\n  constructor(nsp, rooms, socket, cCallback, jCallback) {\n    this._namespace = nsp;\n    this._rooms = rooms;\n    this._socket = socket;\n    this.createRoomCallback = cCallback;\n    this.joinedRoomCallback = jCallback;\n\n    this.initSocket(this._socket);\n  }\n\n  initSocket (socket) {\n    console.log('@@##initSocket @@:' + socket.handshake.query.token + ' ' + socket.handshake.query.name)\n    this._user = new User(socket.id, socket.handshake.query.name);\n    this._socket.on('message', this.receiveMessage.bind(this));\n    // socket.on('disconnect', this.onDisConnect.bind(this));\n    socket.on('userChat', this.onUserChatMessage.bind(this));\n    socket.on('createRoom', this.onCreateRoom.bind(this));\n    socket.on('joinRoom', this.onJoinRoom.bind(this));\n    socket.on(Constants.GET_ROOMS, this.onGetRooms.bind(this));\n\n    socket.on('pointData', this.onGetPointData.bind(this));\n\n    socket.on('gameEvent', this.onGameEvent.bind(this));\n    socket.on('connection', this.onConnect.bind(this));\n  }\n\n  onConnect (sockect) {\n    console.log('@@##onConnect:' + (typeof this.rooms[0]));\n  }\n\n  onCreateRoom (data, fn) {\n    if (!data || !data.name || !data.roomId) {\n\n      return;\n    }\n    console.log('[CHAT]create room :' + ' ' + JSON.stringify(data));\n    // 如果房间存在，则转去加入\n    if (this._rooms[data.roomId]) {\n      this.onJoinRoom(data, fn);\n      return;\n    }\n    // 校验\n    //roomName:房间名称 id 房间roomId\n    this._socket.join(data.roomId, () => {\n      const room = new Room(data.roomId);\n      this._user.roomId = data.roomId;\n      this._user.nickName = data.name;\n      room.join(this._user);\n      try {\n        this._rooms[data.roomId] = room;\n        console.log('@@##this._rooms:' + JSON.stringify(this._rooms))\n        if (!this.game) {\n          this.game = new Game(this._rooms[this._user.roomId], (event) => {\n            console.log('@@##onGetPointData:' + JSON.stringify(event));\n            // this._namespace.to(this._user.roomId).emit('gamePointData', p);\n            this.sendMessageToRoom(this._user.roomId, event.name, event.data);\n          });\n        }\n      } catch (err) {\n        console.log('@@##error is ' + err);\n      }\n\n      // Object.assign(this._rooms, { 'fff': room })\n      // console.log('@@##this._rooms 2:' + JSON.stringify(this._rooms))\n\n      this.createRoomCallback(data.roomId);\n      this._socket.emit('joinedRoom', { code: 0, roomId: data.roomId });\n      // 返回房间数\n      this._namespace.emit(Constants.GET_ROOMS, this._rooms);\n\n      fn && fn(data.roomId);\n    });\n  }\n\n  onJoinRoom (data, fn) {\n    console.log('@@##joinRoom:' + JSON.stringify(data));\n    console.log('@@##joinRoom this._rooms :' + JSON.stringify(this._rooms))\n    let curRoom = this._rooms[data.roomId];\n    if (!curRoom) {\n      console.log('@@##joinRoom fail!' + data);\n      this._socket.emit('joinedRoom', { result: '不存在房间号:' + data.roomId, code: -1 });\n      return;\n    } else {\n      if (curRoom.users.length >= 4) {\n        this._socket.emit('joinedRoom', { result: '已满座', code: -1 });\n        return;\n      }\n    }\n\n    // 如果当前用户的ROOMID与传入的一致，说明已在房间了\n    if (this._user.roomId == data.roomId) {\n      console.log('USER IS ALREADY IN ROOM!')\n    } else {\n      if (this._user.roomId) {\n        //如果不一样，则先将之前的退出，删掉，再进入新的\n        this._socket.leave(this._user.roomId, () => {\n          console.log('@@##' + this._user.nickName + ' leave ' + this._user.roomId);\n        })\n      }\n\n      this._socket.join(data.roomId, () => {\n        console.log('join rooms:' + JSON.stringify(curRoom.id) + ' ' + JSON.stringify(this._rooms));\n        this._user.roomId = data.roomId;\n        this._user.nickName = data.name;\n        curRoom.join(this._user);\n        //   console.log('@@##joined room info :' + JSON.stringify(curRoom.users));\n        this._namespace.to(curRoom.id).emit('serverSendUserChat', {\n          nick: this._user.nickName,\n          message: '我在' + data.roomId\n        });\n        this.joinedRoomCallback(data.roomId);\n        this._socket.emit('joinedRoom', { code: 0, roomId: data.roomId });\n        // 返回房间数\n        // 测试发给所有\n        this._namespace.emit(Constants.GET_ROOMS, this._rooms);\n\n        fn && fn(data.roomId);\n      });\n    }\n\n  }\n\n  onGetRooms (data, fn) {\n    fn && fn(this._rooms);\n  }\n\n  receiveMessage (message) {\n    console.log('chat receive message:' + message);\n    // 然后呢 =\n  }\n\n\n\n  // 接收游戏数据\n  onGetPointData (point) {\n    if (!this.game) {\n      this.game = new Game(this._rooms[this._user.roomId], (event) => {\n        // this._namespace.to(this._user.roomId).emit('gamePointData', p);\n        this.sendMessageToRoom(this._user.roomId, event.name, event.data);\n      });\n    }\n    this.game.handleData(point);\n\n  }\n\n  onGameEvent (event) {\n    if (event && event.action) {\n      this.game && this.game.handleGameEvent(event);\n    }\n  }\n\n  onUserChatMessage (message) {\n    console.log('onUserChatMessage:' + message);\n    this._namespace.to(this._user.roomId).emit('serverSendUserChat', {\n      nick: this._user.nickName,\n      message: message\n    });\n\n\n    // let curRoom = this._rooms[this._user.roomId];\n    // if (curRoom) {\n    //     let users = curRoom.users;\n    //     for (let user of users) {\n    //         this._namespace.to(user.id).emit('serverSendUserChat', {\n    //             nick: user.nickName,\n    //             message: message + 'from' + user.nickName\n    //         });\n    //     }\n    // }\n  }\n\n  sendMessage (socketId, event, message) {\n    //发消息到房间还是给人\n    _socket.broadcast.to(socketId).emit(event, message);\n  }\n\n  sendMessageToRoom (room, event, message) {\n    //发消息到房间还是给人呢\n    this._namespace.to(room).emit(event, message);\n  }\n\n  onDisConnect () {\n    console.log('User ' + this._user.nickName + ' disconneted');\n  }\n\n}"]}