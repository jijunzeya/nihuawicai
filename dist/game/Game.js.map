{"version":3,"sources":["../../src/game/Game.js"],"names":["Game","room","callback","point","type","line","id","addPoint","lines","push","Object","assign","console","log","JSON","stringify","event","name","data","action","pop"],"mappings":";;;;;;;;AACA;;;;AACA;;;;AACA;;;;;;;;IACqBA,I;AAGjB,kBAAYC,IAAZ,EAAkBC,QAAlB,EAA4B;AAAA;;AACxB,aAAKD,IAAL,GAAYA,IAAZ;AACA,aAAKC,QAAL,GAAgBA,QAAhB;AACH;;;;mCAEWC,K,EAAO;AACf,gBAAIA,SAASA,MAAMC,IAAN,KAAe,OAAxB,IAAmC,CAAC,KAAKC,IAA7C,EAAmD;AAC/C,qBAAKA,IAAL,GAAY,mBAASF,MAAMG,EAAf,CAAZ;AACA,qBAAKD,IAAL,CAAUE,QAAV,CAAmBJ,KAAnB;AACA,qBAAKF,IAAL,CAAUO,KAAV,CAAgBC,IAAhB,CAAqBC,OAAOC,MAAP,CAAc,EAAd,EAAkB,KAAKN,IAAvB,CAArB;AACH,aAJD,MAIO,IAAIF,SAASA,MAAMC,IAAN,KAAe,MAAxB,IAAkC,KAAKC,IAA3C,EAAiD;AACpD,qBAAKA,IAAL,CAAUE,QAAV,CAAmBJ,KAAnB;AACH,aAFM,MAEA,IAAIA,SAASA,MAAMC,IAAN,KAAe,KAAxB,IAAiC,KAAKC,IAA1C,EAAgD;AACnD,qBAAKA,IAAL,CAAUE,QAAV,CAAmBJ,KAAnB;AACA;AACA,qBAAKE,IAAL,GAAY,IAAZ;AACAO,wBAAQC,GAAR,CAAY,mBAAmBC,KAAKC,SAAL,CAAe,KAAKP,KAApB,CAA/B;AACH;AACD,gBAAIQ,QAAQ;AACRC,sBAAM,eADE;AAERC,sBAAMf;AAFE,aAAZ;AAIA,iBAAKD,QAAL,IAAiB,KAAKA,QAAL,CAAcc,KAAd,CAAjB;AACH;;;wCAEgBA,K,EAAO;AACpB,gBAAIA,SAASA,MAAMG,MAAN,IAAgB,MAA7B,EAAqC;AACjC,qBAAKlB,IAAL,CAAUO,KAAV,CAAgBY,GAAhB;AACA,qBAAKlB,QAAL,IAAiB,KAAKA,QAAL,CAAc;AAC3Be,0BAAM,eADqB;AAE3BC,0BAAM,KAAKjB,IAAL,CAAUO;AAFW,iBAAd,CAAjB;AAIH;AACJ;;;;;;kBApCgBR,I","file":"Game.js","sourcesContent":["\nimport Room from '../beans/Room';\nimport Line from '../beans/line';\nimport Point from '../beans/Point';\nexport default class Game {\n    line;\n    callback;\n    constructor(room, callback) {\n        this.room = room;\n        this.callback = callback;\n    }\n\n    handleData (point) {\n        if (point && point.type === 'start' && !this.line) {\n            this.line = new Line(point.id);\n            this.line.addPoint(point);\n            this.room.lines.push(Object.assign({}, this.line));\n        } else if (point && point.type === 'move' && this.line) {\n            this.line.addPoint(point);\n        } else if (point && point.type === 'end' && this.line) {\n            this.line.addPoint(point);\n            // this.lines.push(this.line);\n            this.line = null;\n            console.log('@@##lines end:' + JSON.stringify(this.lines));\n        }\n        let event = {\n            name: 'gamePointData',\n            data: point\n        }\n        this.callback && this.callback(event);\n    }\n\n    handleGameEvent (event) {\n        if (event && event.action == 'back') {\n            this.room.lines.pop();\n            this.callback && this.callback({\n                name: 'gameLinesData',\n                data: this.room.lines\n            })\n        }\n    }\n\n\n\n}"]}