{"version":3,"sources":["../../src/game/Game.js"],"names":["Game","callback","lines","handleData","bind","handleGameEvent","point","type","line","id","addPoint","push","Object","assign","console","log","JSON","stringify","event","name","data","action","pop"],"mappings":";;;;;;;;AACA;;;;AACA;;;;AACA;;;;;;;;IACqBA,I;AAInB,gBAAYC,QAAZ,EAAsB;AAAA;;AAAA,SADtBC,KACsB,GADd,EACc;;AACpB;AACA,SAAKD,QAAL,GAAgBA,QAAhB;AACA,SAAKE,UAAL,CAAgBC,IAAhB,CAAqB,IAArB;AACA,SAAKC,eAAL,CAAqBD,IAArB,CAA0B,IAA1B;AACD;;;;+BAEWE,K,EAAO;AACjB,UAAIA,SAASA,MAAMC,IAAN,KAAe,OAAxB,IAAmC,CAAC,KAAKC,IAA7C,EAAmD;AACjD,aAAKA,IAAL,GAAY,mBAASF,MAAMG,EAAf,CAAZ;AACA,aAAKD,IAAL,CAAUE,QAAV,CAAmBJ,KAAnB;AACA,aAAKJ,KAAL,CAAWS,IAAX,CAAgBC,OAAOC,MAAP,CAAc,EAAd,EAAkB,KAAKL,IAAvB,CAAhB;AACD,OAJD,MAIO,IAAIF,SAASA,MAAMC,IAAN,KAAe,MAAxB,IAAkC,KAAKC,IAA3C,EAAiD;AACtD,aAAKA,IAAL,CAAUE,QAAV,CAAmBJ,KAAnB;AACD,OAFM,MAEA,IAAIA,SAASA,MAAMC,IAAN,KAAe,KAAxB,IAAiC,KAAKC,IAA1C,EAAgD;AACrD,aAAKA,IAAL,CAAUE,QAAV,CAAmBJ,KAAnB;AACA;AACA,aAAKE,IAAL,GAAY,IAAZ;AACAM,gBAAQC,GAAR,CAAY,mBAAmBC,KAAKC,SAAL,CAAe,KAAKf,KAApB,CAA/B;AACD;AACD,UAAIgB,QAAQ;AACVC,cAAM,eADI;AAEVC,cAAMd;AAFI,OAAZ;AAIA,WAAKL,QAAL,IAAiB,KAAKA,QAAL,CAAciB,KAAd,CAAjB;AACD;;;oCAEgBA,K,EAAO;AACtB,UAAIA,SAASA,MAAMG,MAAN,IAAgB,MAA7B,EAAqC;AACnC,aAAKnB,KAAL,CAAWoB,GAAX;AACA,aAAKrB,QAAL,IAAiB,KAAKA,QAAL,CAAc;AAC7BkB,gBAAM,eADuB;AAE7BC,gBAAM,KAAKlB;AAFkB,SAAd,CAAjB;AAID;AACF;;;;;;kBAvCkBF,I","file":"Game.js","sourcesContent":["\nimport Room from '../beans/Room';\nimport Line from '../beans/line';\nimport Point from '../beans/Point';\nexport default class Game {\n  line;\n  callback;\n  lines = [];\n  constructor(callback) {\n    // this.room = room;\n    this.callback = callback;\n    this.handleData.bind(this);\n    this.handleGameEvent.bind(this);\n  }\n\n  handleData (point) {\n    if (point && point.type === 'start' && !this.line) {\n      this.line = new Line(point.id);\n      this.line.addPoint(point);\n      this.lines.push(Object.assign({}, this.line));\n    } else if (point && point.type === 'move' && this.line) {\n      this.line.addPoint(point);\n    } else if (point && point.type === 'end' && this.line) {\n      this.line.addPoint(point);\n      // this.lines.push(this.line);\n      this.line = null;\n      console.log('@@##lines end:' + JSON.stringify(this.lines));\n    }\n    let event = {\n      name: 'gamePointData',\n      data: point\n    }\n    this.callback && this.callback(event);\n  }\n\n  handleGameEvent (event) {\n    if (event && event.action == 'back') {\n      this.lines.pop();\n      this.callback && this.callback({\n        name: 'gameLinesData',\n        data: this.lines\n      })\n    }\n  }\n\n\n\n}"]}